{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/joaocruz/frontend-test/src/Autocomplete.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { fetchSuggestions } from \"./utils/api\";\nimport \"./Autocomplete.css\";\nimport ProductDetail from \"./ProductDetail\";\n\nfunction Autocomplete() {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [Id, setId] = useState();\n  const [suggestions, setSuggestions] = useState([]);\n  useEffect(() => {\n    if (searchTerm !== \"\") {\n      fetchSuggestions(searchTerm).then(_suggestions => {\n        let bucket = [];\n\n        for (let i = 0; i < 10; i++) {\n          if (_suggestions[i] != null || _suggestions[i] !== undefined) {\n            bucket[i] = _suggestions[i];\n          }\n        }\n\n        setSuggestions(bucket);\n      });\n    }\n\n    ;\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-row\",\n      children: Id && searchTerm ? /*#__PURE__*/_jsxDEV(ProductDetail, {\n        productId: Id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }, this) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        className: \"search-box\",\n        placeholder: \"Search for a product\",\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), searchTerm ? suggestions === null || suggestions === void 0 ? void 0 : suggestions.map((item, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"autocomplete-items\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setId(item === null || item === void 0 ? void 0 : item.id),\n            children: item === null || item === void 0 ? void 0 : item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this);\n      }) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Autocomplete, \"jpZi3GbFTBYGwNFx93C927lT3Os=\");\n\n_c = Autocomplete;\nexport default Autocomplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"Autocomplete\");","map":{"version":3,"sources":["/home/joaocruz/frontend-test/src/Autocomplete.js"],"names":["React","useEffect","useState","fetchSuggestions","ProductDetail","Autocomplete","searchTerm","setSearchTerm","Id","setId","suggestions","setSuggestions","then","_suggestions","bucket","i","undefined","e","target","value","map","item","key","id","title"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,OAAO,oBAAP;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,EAAD,EAAKC,KAAL,IAAcP,QAAQ,EAA5B;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGK,UAAU,KAAK,EAAlB,EAAqB;AACrBH,MAAAA,gBAAgB,CAACG,UAAD,CAAhB,CAA6BM,IAA7B,CAAmCC,YAAD,IAAkB;AAClD,YAAIC,MAAM,GAAG,EAAb;;AACA,aAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA2B;AACzB,cAAGF,YAAY,CAACE,CAAD,CAAZ,IAAmB,IAAnB,IAA2BF,YAAY,CAACE,CAAD,CAAZ,KAAoBC,SAAlD,EAA4D;AAC1DF,YAAAA,MAAM,CAACC,CAAD,CAAN,GAAYF,YAAY,CAACE,CAAD,CAAxB;AACD;AACF;;AACDJ,QAAAA,cAAc,CAACG,MAAD,CAAd;AACH,OARC;AAQC;;AAAA;AACF,GAXQ,EAWN,CAACR,UAAD,CAXM,CAAT;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACG;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACEE,EAAE,IAAIF,UAAN,gBAAmB,QAAC,aAAD;AAAe,QAAA,SAAS,EAAEE;AAA1B;AAAA;AAAA;AAAA;AAAA,cAAnB,GAAsD;AADxD;AAAA;AAAA;AAAA;AAAA,YADH,eAIE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACA;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEF,UAFT;AAGE,QAAA,SAAS,EAAC,YAHZ;AAIE,QAAA,WAAW,EAAC,sBAJd;AAKE,QAAA,QAAQ,EAAGW,CAAD,IAAOV,aAAa,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV;AALhC;AAAA;AAAA;AAAA;AAAA,cADA,EAQEb,UAAU,GAAGI,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEU,GAAb,CAAiB,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC3C,4BACE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,iCACE;AAAQ,YAAA,OAAO,EAAE,MAAMb,KAAK,CAACY,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEE,EAAP,CAA5B;AAAA,sBAAyCF,IAAzC,aAAyCA,IAAzC,uBAAyCA,IAAI,CAAEG;AAA/C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAKH,OANc,CAAH,GAMP,EAdL;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAzCQnB,Y;;KAAAA,Y;AA2CT,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { fetchSuggestions } from \"./utils/api\";\nimport \"./Autocomplete.css\";\nimport ProductDetail from \"./ProductDetail\";\n\nfunction Autocomplete() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [Id, setId] = useState();\n  const [suggestions, setSuggestions] = useState([]);\n\n  useEffect(() => {\n    if(searchTerm !== \"\"){\n    fetchSuggestions(searchTerm).then((_suggestions) => {\n      let bucket = []\n      for(let i = 0; i < 10; i++){\n        if(_suggestions[i] != null || _suggestions[i] !== undefined){\n          bucket[i] = _suggestions[i]\n        }\n      }\n      setSuggestions(bucket)      \n  })};\n  }, [searchTerm]);\n\n  return (\n    <div className=\"search-container\">\n       <div className=\"product-row\">\n        {Id && searchTerm ? <ProductDetail productId={Id} /> : \"\"}\n      </div>\n      <div className=\"search-row\">\n      <input\n        type=\"text\"\n        value={searchTerm}\n        className=\"search-box\"\n        placeholder=\"Search for a product\"\n        onChange={(e) => setSearchTerm(e.target.value)}\n      />\n       {searchTerm ? suggestions?.map((item, key) => {\n          return (\n            <div className=\"autocomplete-items\">\n              <button onClick={() => setId(item?.id)}>{item?.title}</button>\n            </div>\n          )\n      }) : \"\"}\n      </div>\n    </div>\n  );\n}\n\nexport default Autocomplete;\n"]},"metadata":{},"sourceType":"module"}